// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.17;

import "forge-std/Script.sol";
import { console } from "forge-std/console.sol";
import { ERC4626LevSwapperMorphoGauntletUSDCPrime } from "borrow-staked/swapper/LevSwapper/morpho/implementations/ERC4626LevSwapperMorphoGauntletUSDCPrime.sol";
import "../MainnetConstants.s.sol";
import { MarketParams } from "morpho-blue/libraries/MarketParamsLib.sol";

contract MorphoLiquidate is Script, MainnetConstants {
    error EmptyReturnMessage();

    function run() external {
        uint256 deployerPrivateKey = vm.envUint("KEEPER_PRIVATE_KEY");
        address deployer = vm.addr(deployerPrivateKey);
        vm.startBroadcast(deployerPrivateKey);

        // MarketParams memory params;
        // params.collateralToken = GTUSDCPRIME;
        // params.lltv = LLTV_86;
        // params.irm = IRM_MODEL;
        // params.oracle = 0x4D7d8eF974428a7D73C90B0249003D30cf97239E;
        // params.loanToken = USDA;
        // address borrower = 0xA9DdD91249DFdd450E81E1c56Ab60E1A62651701;
        // uint256 seizedAssets = 50000000000000000000;
        bytes
            memory data = hex"87cb0f510000000000000000000000000000206329b97db379d5e1bf586bbdb969c63274000000000000000000000000bf5495efe5db9ce00f80364c8b423567e58d2110000000000000000000000000d5116061f4a1ffac23e9c6c9f6b4af28b9af7676000000000000000000000000870ac11d48b15db9a138cf899d20f13f79ba00bc0000000000000000000000000000000000000000000000000aaf96eb9d0d0000000000000000000000000000b4f78a5adc242f67dfe3391cea55dc882bcaad7c000000000000000000000000000000000000000000000000000E55CBD7BB774400000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000540000000000000000000000000bf5495efe5db9ce00f80364c8b423567e58d21100000000000000000000000000000206329b97db379d5e1bf586bbdb969c63274000000000000000000000000000000000000000000000000000e55cbd7cab985000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000a9bbbdde822789f123667044443dc7001fb43c0100000000000000000000000000000000000000000000000085452876d4b640740000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000003e807ed2379000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000bf5495efe5db9ce00f80364c8b423567e58d21100000000000000000000000000000206329b97db379d5e1bf586bbdb969c63274000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd090000000000000000000000001b610f5ba95d3a9d0f7b41ed55615157074639bf000000000000000000000000000000000000000000000000000e522060062b82000000000000000000000000000000000000000000000000a25b9b379200600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000028700000000000000000000000000000000000000000000000000026900023b00a007e5c0d200000000000000000000000000000000000000021700012700008b00004f02a0000000000000000000000000000000000000000000000000000dec23753baf22ee63c1e501be80225f09645f172b079394312220637c440a63bf5495efe5db9ce00f80364c8b423567e58d21104101c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200042e1a7d4d00000000000000000000000000000000000000000000000000000000000000004160e68c1d72340aeefe5be76eda63ae2f4bc75141100044fe0291560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b283ab5120222222fd79264bbe280b4986f6fefbc3524d0137a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800043b6a1fe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000206329b97db379d5e1bf586bbdb969c63274000000000000000000000000111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000000000000000000020d6bdbf780000206329b97db379d5e1bf586bbdb969c63274111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000f737be46000000000000000000000000000000000000000000000000";

        address swapper = 0x1b610F5bA95d3a9d0f7B41ED55615157074639Bf;
        (bool success, bytes memory result) = swapper.call(data);
        if (!success) _revertBytes(result);
        vm.stopBroadcast();
    }

    function _revertBytes(bytes memory errMsg) internal {
        if (errMsg.length != 0) {
            //solhint-disable-next-line
            assembly {
                revert(add(32, errMsg), mload(errMsg))
            }
        }
        revert EmptyReturnMessage();
    }
}
